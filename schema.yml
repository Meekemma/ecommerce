openapi: 3.0.3
info:
  title: Django DRF Ecommerce
  version: 0.0.0
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /category/:
    get:
      operationId: category_retrieve
      tags:
      - category
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /create/:
    post:
      operationId: create_create
      tags:
      - create
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orders/create-wishlist/:
    post:
      operationId: orders_create_wishlist_create
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/create_order/:
    post:
      operationId: orders_create_order_create
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/myorders/:
    get:
      operationId: orders_myorders_retrieve
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/order/{id}/:
    get:
      operationId: orders_order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/orders/:
    get:
      operationId: orders_orders_retrieve
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/wish-list/{id}/:
    get:
      operationId: orders_wish_list_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: orders_wish_list_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: orders_wish_list_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /product/{id}/:
    get:
      operationId: product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - product
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /product/{id}/reviews/:
    post:
      operationId: product_reviews_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - product
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /update_product/{id}/:
    get:
      operationId: update_product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - update_product
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: update_product_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - update_product
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: update_product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - update_product
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/create_profile/:
    post:
      operationId: users_create_profile_create
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: users_create_profile_update
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/password_reset/:
    post:
      operationId: users_password_reset_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/reset/{token}/:
    post:
      operationId: users_reset_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/token/:
    post:
      operationId: users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/users/:
    get:
      operationId: users_users_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/users/{id}/:
    get:
      operationId: users_users_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: users_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    MyTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
